// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('test1', function() {
  this.timeout(30000)
  let driver
  let vars
  if (!fs.existsSync('./screenshots')) {
        fs.mkdirSync('./screenshots');
    }
  beforeEach(async function() {
    const host = process.env.SELENIUM || 'selenium';
          const server = `http://${host}:4444`;
        driver = await new Builder()
            .usingServer(server)
            .forBrowser('chrome')
            .build();
    
    vars = {}
  })
  afterEach(async function() {
    if (driver) {
            // Take a screenshot of the result page
            const filename = this.currentTest.fullTitle()
                .replace(/['"]+/g, '')
                .replace(/[^a-z0-9]/gi, '_')
                .toLowerCase();;
            const encodedString = await driver.takeScreenshot();
            await fs.writeFileSync(`./screenshots/${filename}.png`,
                encodedString, 'base64');

            // Close the browser
            await driver.quit();
        }
  })
  it('test1', async function() {
    await driver.get("http://localhost:8000/")
    await driver.manage().window().setRect({ width: 1050, height: 652 })
    await driver.findElement(By.id("num1")).click()
    await driver.findElement(By.id("num1")).sendKeys("1")
    await driver.findElement(By.id("num2")).click()
    await driver.findElement(By.id("num2")).sendKeys("1")
    await driver.findElement(By.css("button:nth-child(1)")).click()
  })
})
